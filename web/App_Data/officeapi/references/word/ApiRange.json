{
  "methods": {
    "GetClassType": {
      "memberof": "ApiRange",
      "name": "GetClassType",
      "description": "<p>Returns a type of the ApiRange class.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "\"range\""
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParagraph": {
      "memberof": "ApiRange",
      "name": "GetParagraph",
      "description": "<p>Returns a paragraph from all the paragraphs that are in the range.</p>",
      "tags": {},
      "returns": [
        [
          "ApiParagraph",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Number",
          "name": "nPos",
          "description": "<p>The paragraph position in the range.</p>",
          "optional": false
        }
      ]
    },
    "AddText": {
      "memberof": "ApiRange",
      "name": "AddText",
      "description": "<p>Adds a text to the specified position.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "String",
          "name": "sText",
          "description": "<p>The text that will be added.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sPosition",
          "description": "<p>The position where the text will be added (&quot;before&quot; or &quot;after&quot; the range specified).</p>",
          "optional": true,
          "defaultValue": "\"after\""
        }
      ]
    },
    "AddBookmark": {
      "memberof": "ApiRange",
      "name": "AddBookmark",
      "description": "<p>Adds a bookmark to the specified range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "String",
          "name": "sName",
          "description": "<p>The bookmark name.</p>",
          "optional": false
        }
      ]
    },
    "AddHyperlink": {
      "memberof": "ApiRange",
      "name": "AddHyperlink",
      "description": "<p>Adds a hyperlink to the specified range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiHyperlink",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sLink",
          "description": "<p>The link address.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sScreenTipText",
          "description": "<p>The screen tip text.</p>",
          "optional": false
        }
      ]
    },
    "GetText": {
      "memberof": "ApiRange",
      "name": "GetText",
      "description": "<p>Returns a text from the specified range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "String"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "oPr",
          "description": "<p>The resulting string display properties.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "oPr.NewLineParagraph",
          "description": "<p>Defines if the resulting string will include paragraph line boundaries or not.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "boolean",
          "name": "oPr.Numbering",
          "description": "<p>Defines if the resulting string will include numbering or not.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "boolean",
          "name": "oPr.Math",
          "description": "<p>Defines if the resulting string will include mathematical expressions or not.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "string",
          "name": "oPr.NewLineSeparator",
          "description": "<p>Defines how the line separator will be specified in the resulting string.</p>",
          "optional": true,
          "defaultValue": "'\\r'"
        },
        {
          "type": "string",
          "name": "oPr.TableCellSeparator",
          "description": "<p>Defines how the table cell separator will be specified in the resulting string.</p>",
          "optional": true,
          "defaultValue": "'\\t'"
        },
        {
          "type": "string",
          "name": "oPr.TableRowSeparator",
          "description": "<p>Defines how the table row separator will be specified in the resulting string.</p>",
          "optional": true,
          "defaultValue": "'\\r\\n'"
        },
        {
          "type": "string",
          "name": "oPr.ParaSeparator",
          "description": "<p>Defines how the paragraph separator will be specified in the resulting string.</p>",
          "optional": true,
          "defaultValue": "'\\r\\n'"
        },
        {
          "type": "string",
          "name": "oPr.TabSymbol",
          "description": "<p>Defines how the tab will be specified in the resulting string (does not apply to numbering)</p>",
          "optional": true,
          "defaultValue": "'\\t'"
        }
      ]
    },
    "GetAllParagraphs": {
      "memberof": "ApiRange",
      "name": "GetAllParagraphs",
      "description": "<p>Returns a collection of paragraphs that represents all the paragraphs in the specified range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiParagraph>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "Select": {
      "memberof": "ApiRange",
      "name": "Select",
      "description": "<p>Sets the selection to the specified range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null
    },
    "ExpandTo": {
      "memberof": "ApiRange",
      "name": "ExpandTo",
      "description": "<p>Returns a new range that goes beyond the specified range in any direction and spans a different range. The current range has not changed. Throws an error if two ranges do not have a union.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiRange",
          "name": "oRange",
          "description": "<p>The range that will be expanded.</p>",
          "optional": false
        }
      ]
    },
    "IntersectWith": {
      "memberof": "ApiRange",
      "name": "IntersectWith",
      "description": "<p>Returns a new range as the intersection of the current range with another range. The current range has not changed. Throws an error if two ranges do not overlap or are not adjacent.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiRange",
          "name": "oRange",
          "description": "<p>The range that will be intersected with the current range.</p>",
          "optional": false
        }
      ]
    },
    "SetBold": {
      "memberof": "ApiRange",
      "name": "SetBold",
      "description": "<p>Sets the bold property to the text character.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isBold",
          "description": "<p>Specifies if the Range contents are displayed bold or not.</p>",
          "optional": false
        }
      ]
    },
    "SetCaps": {
      "memberof": "ApiRange",
      "name": "SetCaps",
      "description": "<p>Specifies that any lowercase characters in the current text Range are formatted for display only as their capital letter character equivalents.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isCaps",
          "description": "<p>Specifies if the Range contents are displayed capitalized or not.</p>",
          "optional": false
        }
      ]
    },
    "SetColor": {
      "memberof": "ApiRange",
      "name": "SetColor",
      "description": "<p>Sets the text color to the current text Range in the RGB format.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAuto",
          "description": "<p>If this parameter is set to &quot;true&quot;, then r,g,b parameters will be ignored.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "SetDoubleStrikeout": {
      "memberof": "ApiRange",
      "name": "SetDoubleStrikeout",
      "description": "<p>Specifies that the contents of the current Range are displayed with two horizontal lines through each character displayed on the line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isDoubleStrikeout",
          "description": "<p>Specifies if the contents of the current Range are displayed double struck through or not.</p>",
          "optional": false
        }
      ]
    },
    "SetHighlight": {
      "memberof": "ApiRange",
      "name": "SetHighlight",
      "description": "<p>Specifies a highlighting color which is applied as a background to the contents of the current Range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "highlightColor",
          "name": "sColor",
          "description": "<p>Available highlight color.</p>",
          "optional": false
        }
      ]
    },
    "SetShd": {
      "memberof": "ApiRange",
      "name": "SetShd",
      "description": "<p>Specifies the shading applied to the contents of the current text Range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ShdType",
          "name": "sType",
          "description": "<p>The shading type applied to the contents of the current text Range.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetItalic": {
      "memberof": "ApiRange",
      "name": "SetItalic",
      "description": "<p>Sets the italic property to the text character.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isItalic",
          "description": "<p>Specifies if the contents of the current Range are displayed italicized or not.</p>",
          "optional": false
        }
      ]
    },
    "SetStrikeout": {
      "memberof": "ApiRange",
      "name": "SetStrikeout",
      "description": "<p>Specifies that the contents of the current Range are displayed with a single horizontal line through the range center.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isStrikeout",
          "description": "<p>Specifies if the contents of the current Range are displayed struck through or not.</p>",
          "optional": false
        }
      ]
    },
    "SetSmallCaps": {
      "memberof": "ApiRange",
      "name": "SetSmallCaps",
      "description": "<p>Specifies that all the lowercase letter characters in the current text Range are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isSmallCaps",
          "description": "<p>Specifies if the contents of the current Range are displayed capitalized two points smaller or not.</p>",
          "optional": false
        }
      ]
    },
    "SetSpacing": {
      "memberof": "ApiRange",
      "name": "SetSpacing",
      "description": "<p>Sets the text spacing measured in twentieths of a point.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nSpacing",
          "description": "<p>The value of the text spacing measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetUnderline": {
      "memberof": "ApiRange",
      "name": "SetUnderline",
      "description": "<p>Specifies that the contents of the current Range are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isUnderline",
          "description": "<p>Specifies if the contents of the current Range are displayed underlined or not.</p>",
          "optional": false
        }
      ]
    },
    "SetVertAlign": {
      "memberof": "ApiRange",
      "name": "SetVertAlign",
      "description": "<p>Specifies the alignment which will be applied to the Range contents in relation to the default appearance of the Range text:</p>\n<ul>\n<li><b>&quot;baseline&quot;</b> - the characters in the current text Range will be aligned by the default text baseline.</li>\n<li><b>&quot;subscript&quot;</b> - the characters in the current text Range will be aligned below the default text baseline.</li>\n<li><b>&quot;superscript&quot;</b> - the characters in the current text Range will be aligned above the default text baseline.</li>\n</ul>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "\"baseline\" | \"subscript\" | \"superscript\"",
          "name": "sType",
          "description": "<p>The vertical alignment type applied to the text contents.</p>",
          "optional": false
        }
      ]
    },
    "SetPosition": {
      "memberof": "ApiRange",
      "name": "SetPosition",
      "description": "<p>Specifies the amount by which text is raised or lowered for the current Range in relation to the default\nbaseline of the surrounding non-positioned text.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "hps",
          "name": "nPosition",
          "description": "<p>Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetFontSize": {
      "memberof": "ApiRange",
      "name": "SetFontSize",
      "description": "<p>Sets the font size to the characters of the current text Range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "hps",
          "name": "FontSize",
          "description": "<p>The text size value measured in half-points (1/144 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetFontFamily": {
      "memberof": "ApiRange",
      "name": "SetFontFamily",
      "description": "<p>Sets all 4 font slots with the specified font family.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sFontFamily",
          "description": "<p>The font family or families used for the current text Range.</p>",
          "optional": false
        }
      ]
    },
    "SetStyle": {
      "memberof": "ApiRange",
      "name": "SetStyle",
      "description": "<p>Sets the style to the current Range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiStyle",
          "name": "oStyle",
          "description": "<p>The style which must be applied to the text character.</p>",
          "optional": false
        }
      ]
    },
    "SetTextPr": {
      "memberof": "ApiRange",
      "name": "SetTextPr",
      "description": "<p>Sets the text properties to the current Range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiTextPr",
          "name": "oTextPr",
          "description": "<p>The text properties that will be applied to the current range.</p>",
          "optional": false
        }
      ]
    },
    "Delete": {
      "memberof": "ApiRange",
      "name": "Delete",
      "description": "<p>Deletes all the contents from the current range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "ToJSON": {
      "memberof": "ApiRange",
      "name": "ToJSON",
      "description": "<p>Converts the ApiRange object into the JSON object.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "JSON"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "bWriteNumberings",
          "description": "<p>Specifies if the used numberings will be written to the JSON object or not.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bWriteStyles",
          "description": "<p>Specifies if the used styles will be written to the JSON object or not.</p>",
          "optional": false
        }
      ]
    },
    "AddComment": {
      "memberof": "ApiRange",
      "name": "AddComment",
      "description": "<p>Adds a comment to the current range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiComment"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sText",
          "description": "<p>The comment text (required).</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sAuthor",
          "description": "<p>The author's name (optional).</p>",
          "optional": false
        }
      ]
    },
    "GetRange": {
      "memberof": "ApiRange",
      "name": "GetRange",
      "description": "<p>Returns a Range object that represents the document part contained in the specified range.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Number",
          "name": "Start",
          "description": "<p>Start character index in the current range.</p>",
          "optional": true,
          "defaultValue": 0
        },
        {
          "type": "Number",
          "name": "End",
          "description": "<p>End character index in the current range (if &lt;= 0, then the range is taken to the end).</p>",
          "optional": true,
          "defaultValue": -1
        }
      ]
    }
  },
  "events": {},
  "comment": "/**\n\t * Class representing a continuous region in a document. \n\t * Each Range object is determined by the position of the start and end characters.\n\t * @param oElement - The document element that may be Document, Table, Paragraph, Run or Hyperlink.\n\t * @param {Number} Start - The start element of Range in the current Element.\n\t * @param {Number} End - The end element of Range in the current Element.\n\t * @constructor\n\t */",
  "description": "<p>Class representing a continuous region in a document.\nEach Range object is determined by the position of the start and end characters.</p>",
  "scope": "global",
  "params": [
    {
      "type": "Number",
      "name": "Start",
      "description": "<p>The start element of Range in the current Element.</p>",
      "optional": false
    },
    {
      "type": "Number",
      "name": "End",
      "description": "<p>The end element of Range in the current Element.</p>",
      "optional": false
    }
  ]
}