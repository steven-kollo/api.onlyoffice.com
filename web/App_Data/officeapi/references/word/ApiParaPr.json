{
  "methods": {
    "GetClassType": {
      "memberof": "ApiParaPr",
      "name": "GetClassType",
      "description": "<p>Returns a type of the ApiParaPr class.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"paraPr\""
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetStyle": {
      "memberof": "ApiParaPr",
      "name": "SetStyle",
      "description": "<p>The paragraph style base method.\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiStyle",
          "name": "oStyle",
          "description": "<p>The style of the paragraph to be set.</p>",
          "optional": false
        }
      ]
    },
    "GetStyle": {
      "memberof": "ApiParaPr",
      "name": "GetStyle",
      "description": "<p>Returns the paragraph style method.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiStyle"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetContextualSpacing": {
      "memberof": "ApiParaPr",
      "name": "SetContextualSpacing",
      "description": "<p>Specifies that any space before or after this paragraph set using the\n{@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and\nfollowing paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isContextualSpacing",
          "description": "<p>The true value will enable the paragraph contextual spacing.</p>",
          "optional": false
        }
      ]
    },
    "SetIndLeft": {
      "memberof": "ApiParaPr",
      "name": "SetIndLeft",
      "description": "<p>Sets the paragraph left side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "GetIndLeft": {
      "memberof": "ApiParaPr",
      "name": "GetIndLeft",
      "description": "<p>Returns the paragraph left side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetIndRight": {
      "memberof": "ApiParaPr",
      "name": "SetIndRight",
      "description": "<p>Sets the paragraph right side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "GetIndRight": {
      "memberof": "ApiParaPr",
      "name": "GetIndRight",
      "description": "<p>Returns the paragraph right side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetIndFirstLine": {
      "memberof": "ApiParaPr",
      "name": "SetIndFirstLine",
      "description": "<p>Sets the paragraph first line indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "GetIndFirstLine": {
      "memberof": "ApiParaPr",
      "name": "GetIndFirstLine",
      "description": "<p>Returns the paragraph first line indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetJc": {
      "memberof": "ApiParaPr",
      "name": "SetJc",
      "description": "<p>Sets the paragraph contents justification.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "\"left\" | \"right\" | \"both\" | \"center\"",
          "name": "sJc",
          "description": "<p>The justification type that\nwill be applied to the paragraph contents.</p>",
          "optional": false
        }
      ]
    },
    "GetJc": {
      "memberof": "ApiParaPr",
      "name": "GetJc",
      "description": "<p>Returns the paragraph contents justification.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"left\"",
          "\"right\"",
          "\"both\"",
          "\"center\"",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetKeepLines": {
      "memberof": "ApiParaPr",
      "name": "SetKeepLines",
      "description": "<p>Specifies that when rendering the document using a page view, all lines of the current paragraph are maintained on a single page whenever possible.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isKeepLines",
          "description": "<p>The true value enables the option to keep lines of the paragraph on a single page.</p>",
          "optional": false
        }
      ]
    },
    "SetKeepNext": {
      "memberof": "ApiParaPr",
      "name": "SetKeepNext",
      "description": "<p>Specifies that when rendering the document using a paginated view, the contents of the current paragraph are at least\npartly rendered on the same page as the following paragraph whenever possible.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isKeepNext",
          "description": "<p>The true value enables the option to keep lines of the paragraph on the same\npage as the following paragraph.</p>",
          "optional": false
        }
      ]
    },
    "SetPageBreakBefore": {
      "memberof": "ApiParaPr",
      "name": "SetPageBreakBefore",
      "description": "<p>Specifies that when rendering the document using a paginated view, the contents of the current paragraph are rendered at\nthe beginning of a new page in the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isPageBreakBefore",
          "description": "<p>The true value enables the option to render the contents of the paragraph\nat the beginning of a new page in the document.</p>",
          "optional": false
        }
      ]
    },
    "SetSpacingLine": {
      "memberof": "ApiParaPr",
      "name": "SetSpacingLine",
      "description": "<p>Sets the paragraph line spacing. If the value of the sLineRule parameter is either\n&quot;atLeast&quot; or &quot;exact&quot;, then the value of nLine will be interpreted as twentieths of a point. If\nthe value of the sLineRule parameter is &quot;auto&quot;, then the value of the\nnLine parameter will be interpreted as 240ths of a line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips | line240",
          "name": "nLine",
          "description": "<p>The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.</p>",
          "optional": false
        },
        {
          "type": "\"auto\" | \"atLeast\" | \"exact\"",
          "name": "sLineRule",
          "description": "<p>The rule that determines the measuring units of the line spacing.</p>",
          "optional": false
        }
      ]
    },
    "GetSpacingLineValue": {
      "memberof": "ApiParaPr",
      "name": "GetSpacingLineValue",
      "description": "<p>Returns the paragraph line spacing value.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "line240",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetSpacingLineRule": {
      "memberof": "ApiParaPr",
      "name": "GetSpacingLineRule",
      "description": "<p>Returns the paragraph line spacing rule.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"auto\"",
          "\"atLeast\"",
          "\"exact\"",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetSpacingBefore": {
      "memberof": "ApiParaPr",
      "name": "SetSpacingBefore",
      "description": "<p>Sets the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then\nany value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then\nit will be interpreted as false.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nBefore",
          "description": "<p>The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isBeforeAuto",
          "description": "<p>The true value disables the spacing before the current paragraph.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetSpacingBefore": {
      "memberof": "ApiParaPr",
      "name": "GetSpacingBefore",
      "description": "<p>Returns the spacing before value of the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetSpacingAfter": {
      "memberof": "ApiParaPr",
      "name": "SetSpacingAfter",
      "description": "<p>Sets the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then\nany value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it\nwill be interpreted as false.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nAfter",
          "description": "<p>The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAfterAuto",
          "description": "<p>The true value disables the spacing after the current paragraph.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetSpacingAfter": {
      "memberof": "ApiParaPr",
      "name": "GetSpacingAfter",
      "description": "<p>Returns the spacing after value of the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetShd": {
      "memberof": "ApiParaPr",
      "name": "SetShd",
      "description": "<p>Specifies the shading applied to the contents of the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ShdType",
          "name": "sType",
          "description": "<p>The shading type which will be applied to the contents of the current paragraph.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAuto",
          "description": "<p>The true value disables paragraph contents shading.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetShd": {
      "memberof": "ApiParaPr",
      "name": "GetShd",
      "description": "<p>Returns the shading applied to the contents of the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRGBColor"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetBottomBorder": {
      "memberof": "ApiParaPr",
      "name": "SetBottomBorder",
      "description": "<p>Specifies the border which will be displayed below a set of paragraphs which have the same paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added\nto the whole block rather than to every paragraph in this block.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current bottom border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset below the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetLeftBorder": {
      "memberof": "ApiParaPr",
      "name": "SetLeftBorder",
      "description": "<p>Specifies the border which will be displayed at the left side of the page around the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current left border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset to the left of the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetRightBorder": {
      "memberof": "ApiParaPr",
      "name": "SetRightBorder",
      "description": "<p>Specifies the border which will be displayed at the right side of the page around the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current right border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset to the right of the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetTopBorder": {
      "memberof": "ApiParaPr",
      "name": "SetTopBorder",
      "description": "<p>Specifies the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current top border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset above the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetBetweenBorder": {
      "memberof": "ApiParaPr",
      "name": "SetBetweenBorder",
      "description": "<p>Specifies the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset between the paragraphs measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetWidowControl": {
      "memberof": "ApiParaPr",
      "name": "SetWidowControl",
      "description": "<p>Specifies whether a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isWidowControl",
          "description": "<p>The true value means that a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.</p>",
          "optional": false
        }
      ]
    },
    "SetTabs": {
      "memberof": "ApiParaPr",
      "name": "SetTabs",
      "description": "<p>Specifies a sequence of custom tab stops which will be used for any tab characters in the current paragraph.\n<b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Array.<twips>",
          "name": "aPos",
          "description": "<p>An array of the positions of custom tab stops with respect to the current page margins\nmeasured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "Array.<TabJc>",
          "name": "aVal",
          "description": "<p>An array of the styles of custom tab stops, which determines the behavior of the tab\nstop and the alignment which will be applied to text entered at the current custom tab stop.</p>",
          "optional": false
        }
      ]
    },
    "SetNumPr": {
      "memberof": "ApiParaPr",
      "name": "SetNumPr",
      "description": "<p>Specifies that the current paragraph references a numbering definition instance in the current document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiNumbering",
          "name": "oNumPr",
          "description": "<p>Specifies a numbering definition.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "nLvl",
          "description": "<p>Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct\nformatting of a paragraph, then this parameter MUST BE specified. Otherwise, if the current instance of the ApiParaPr class\nis the part of ApiStyle properties, this parameter will be ignored.</p>",
          "optional": true,
          "defaultValue": 0
        }
      ]
    },
    "SetBullet": {
      "memberof": "ApiParaPr",
      "name": "SetBullet",
      "description": "<p>Sets the bullet or numbering to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiBullet",
          "name": "oBullet",
          "description": "<p>The bullet object created with the {@link Api#CreateBullet} or {@link Api#CreateNumbering} method.</p>",
          "optional": false
        }
      ]
    },
    "ToJSON": {
      "memberof": "ApiParaPr",
      "name": "ToJSON",
      "description": "<p>Converts the ApiParaPr object into the JSON object.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "JSON"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "bWriteStyles",
          "description": "<p>Specifies if the used styles will be written to the JSON object or not.</p>",
          "optional": false
        }
      ]
    }
  },
  "events": {},
  "comment": "/**\n\t * Class representing the paragraph properties.\n\t * @constructor\n\t */",
  "description": "<p>Class representing the paragraph properties.</p>",
  "scope": "global",
  "params": []
}