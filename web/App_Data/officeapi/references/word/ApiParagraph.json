{
  "methods": {
    "GetClassType": {
      "memberof": "ApiParagraph",
      "name": "GetClassType",
      "description": "<p>Returns a type of the ApiParagraph class.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"paragraph\""
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddText": {
      "memberof": "ApiParagraph",
      "name": "AddText",
      "description": "<p>Adds some text to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sText",
          "description": "<p>The text that we want to insert into the current document element.</p>",
          "optional": true,
          "defaultValue": "\"\""
        }
      ]
    },
    "AddPageBreak": {
      "memberof": "ApiParagraph",
      "name": "AddPageBreak",
      "description": "<p>Adds a page break and starts the next element from the next page.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddLineBreak": {
      "memberof": "ApiParagraph",
      "name": "AddLineBreak",
      "description": "<p>Adds a line break to the current position and starts the next element from a new line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddColumnBreak": {
      "memberof": "ApiParagraph",
      "name": "AddColumnBreak",
      "description": "<p>Adds a column break to the current position and starts the next element from a new column.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddPageNumber": {
      "memberof": "ApiParagraph",
      "name": "AddPageNumber",
      "description": "<p>Inserts a number of the current document page into the paragraph.\n<note>This method works for the paragraphs in the document header/footer only.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddPagesCount": {
      "memberof": "ApiParagraph",
      "name": "AddPagesCount",
      "description": "<p>Inserts a number of pages in the current document into the paragraph.\n<note>This method works for the paragraphs in the document header/footer only.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParagraphMarkTextPr": {
      "memberof": "ApiParagraph",
      "name": "GetParagraphMarkTextPr",
      "description": "<p>Returns the text properties of the paragraph mark which is used to mark the paragraph end. The mark can also acquire\ncommon text properties like bold, italic, underline, etc.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiTextPr"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParaPr": {
      "memberof": "ApiParagraph",
      "name": "GetParaPr",
      "description": "<p>Returns the paragraph properties.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiParaPr"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetNumbering": {
      "memberof": "ApiParagraph",
      "name": "GetNumbering",
      "description": "<p>Returns the numbering definition and numbering level for the numbered list.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiNumberingLevel"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetNumbering": {
      "memberof": "ApiParagraph",
      "name": "SetNumbering",
      "description": "<p>Specifies that the current paragraph references the numbering definition instance in the current document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": "Same as {@link ApiParagraph#SetNumPr}",
      "inherits": null,
      "params": [
        {
          "type": "ApiNumberingLevel",
          "name": "oNumberingLevel",
          "description": "<p>The numbering level which will be used for assigning the numbers to the paragraph.</p>",
          "optional": false
        }
      ]
    },
    "GetElementsCount": {
      "memberof": "ApiParagraph",
      "name": "GetElementsCount",
      "description": "<p>Returns a number of elements in the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "number"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetElement": {
      "memberof": "ApiParagraph",
      "name": "GetElement",
      "description": "<p>Returns a paragraph element using the position specified.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ParagraphContent"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "nPos",
          "description": "<p>The position where the element which content we want to get must be located.</p>",
          "optional": false
        }
      ]
    },
    "RemoveElement": {
      "memberof": "ApiParagraph",
      "name": "RemoveElement",
      "description": "<p>Removes an element using the position specified.\n<note>If the element you remove is the last paragraph element (i.e. all the elements are removed from the paragraph),\na new empty run is automatically created. If you want to add\ncontent to this run, use the {@link ApiParagraph#GetElement} method.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "nPos",
          "description": "<p>The element position which we want to remove from the paragraph.</p>",
          "optional": false
        }
      ]
    },
    "RemoveAllElements": {
      "memberof": "ApiParagraph",
      "name": "RemoveAllElements",
      "description": "<p>Removes all the elements from the current paragraph.\n<note>When all the elements are removed from the paragraph, a new empty run is automatically created. If you want to add\ncontent to this run, use the {@link ApiParagraph#GetElement} method.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null
    },
    "Delete": {
      "memberof": "ApiParagraph",
      "name": "Delete",
      "description": "<p>Deletes the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetNext": {
      "memberof": "ApiParagraph",
      "name": "GetNext",
      "description": "<p>Returns the next paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiParagraph",
          "null"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetPrevious": {
      "memberof": "ApiParagraph",
      "name": "GetPrevious",
      "description": "<p>Returns the previous paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "Copy": {
      "memberof": "ApiParagraph",
      "name": "Copy",
      "description": "<p>Creates a paragraph copy. Ingnore comments, footnote references, complex fields.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddElement": {
      "memberof": "ApiParagraph",
      "name": "AddElement",
      "description": "<p>Adds an element to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ParagraphContent",
          "name": "oElement",
          "description": "<p>The document element which will be added at the current position. Returns false if the\noElement type is not supported by a paragraph.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "nPos",
          "description": "<p>The position where the current element will be added. If this value is not\nspecified, then the element will be added at the end of the current paragraph.</p>",
          "optional": true
        }
      ]
    },
    "AddTabStop": {
      "memberof": "ApiParagraph",
      "name": "AddTabStop",
      "description": "<p>Adds a tab stop to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "AddDrawing": {
      "memberof": "ApiParagraph",
      "name": "AddDrawing",
      "description": "<p>Adds a drawing object (image, shape or chart) to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiDrawing",
          "name": "oDrawing",
          "description": "<p>The object which will be added to the current paragraph.</p>",
          "optional": false
        }
      ]
    },
    "AddInlineLvlSdt": {
      "memberof": "ApiParagraph",
      "name": "AddInlineLvlSdt",
      "description": "<p>Adds an inline container.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiInlineLvlSdt"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiInlineLvlSdt",
          "name": "oSdt",
          "description": "<p>An inline container. If undefined or null, then new class ApiInlineLvlSdt will be created and added to the paragraph.</p>",
          "optional": false
        }
      ]
    },
    "AddComment": {
      "memberof": "ApiParagraph",
      "name": "AddComment",
      "description": "<p>Adds a comment to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiComment"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sText",
          "description": "<p>The comment text (required).</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sAuthor",
          "description": "<p>The author's name (optional).</p>",
          "optional": false
        }
      ]
    },
    "AddHyperlink": {
      "memberof": "ApiParagraph",
      "name": "AddHyperlink",
      "description": "<p>Adds a hyperlink to a paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiHyperlink",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sLink",
          "description": "<p>The link address.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sScreenTipText",
          "description": "<p>The screen tip text.</p>",
          "optional": false
        }
      ]
    },
    "GetRange": {
      "memberof": "ApiParagraph",
      "name": "GetRange",
      "description": "<p>Returns a Range object that represents the part of the document contained in the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRange"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "Number",
          "name": "Start",
          "description": "<p>Start character in the current element.</p>",
          "optional": false
        },
        {
          "type": "Number",
          "name": "End",
          "description": "<p>End character in the current element.</p>",
          "optional": false
        }
      ]
    },
    "Push": {
      "memberof": "ApiParagraph",
      "name": "Push",
      "description": "<p>Adds an element to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ParagraphContent",
          "name": "oElement",
          "description": "<p>The document element which will be added at the current position. Returns false if the\noElement type is not supported by a paragraph.</p>",
          "optional": false
        }
      ]
    },
    "GetLastRunWithText": {
      "memberof": "ApiParagraph",
      "name": "GetLastRunWithText",
      "description": "<p>Returns the last Run with text in the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRun"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetBold": {
      "memberof": "ApiParagraph",
      "name": "SetBold",
      "description": "<p>Sets the bold property to the text character.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isBold",
          "description": "<p>Specifies that the contents of this paragraph are displayed bold.</p>",
          "optional": false
        }
      ]
    },
    "SetCaps": {
      "memberof": "ApiParagraph",
      "name": "SetCaps",
      "description": "<p>Specifies that any lowercase characters in this paragraph are formatted for display only as their capital letter character equivalents.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isCaps",
          "description": "<p>Specifies that the contents of the current paragraph are displayed capitalized.</p>",
          "optional": false
        }
      ]
    },
    "SetColor": {
      "memberof": "ApiParagraph",
      "name": "SetColor",
      "description": "<p>Sets the text color to the current paragraph in the RGB format.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAuto",
          "description": "<p>If this parameter is set to &quot;true&quot;, then r,g,b parameters will be ignored.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "SetDoubleStrikeout": {
      "memberof": "ApiParagraph",
      "name": "SetDoubleStrikeout",
      "description": "<p>Specifies that the contents of this paragraph are displayed with two horizontal lines through each character displayed on the line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isDoubleStrikeout",
          "description": "<p>Specifies that the contents of the current paragraph are displayed double struck through.</p>",
          "optional": false
        }
      ]
    },
    "SetFontFamily": {
      "memberof": "ApiParagraph",
      "name": "SetFontFamily",
      "description": "<p>Sets all 4 font slots with the specified font family.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sFontFamily",
          "description": "<p>The font family or families used for the current paragraph.</p>",
          "optional": false
        }
      ]
    },
    "GetFontNames": {
      "memberof": "ApiParagraph",
      "name": "GetFontNames",
      "description": "<p>Returns all font names from all elements inside the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<string>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetFontSize": {
      "memberof": "ApiParagraph",
      "name": "SetFontSize",
      "description": "<p>Sets the font size to the characters of the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "hps",
          "name": "nSize",
          "description": "<p>The text size value measured in half-points (1/144 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetHighlight": {
      "memberof": "ApiParagraph",
      "name": "SetHighlight",
      "description": "<p>Specifies a highlighting color which is applied as a background to the contents of the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CPE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "highlightColor",
          "name": "sColor",
          "description": "<p>Available highlight color.</p>",
          "optional": false
        }
      ]
    },
    "SetItalic": {
      "memberof": "ApiParagraph",
      "name": "SetItalic",
      "description": "<p>Sets the italic property to the text character.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isItalic",
          "description": "<p>Specifies that the contents of the current paragraph are displayed italicized.</p>",
          "optional": false
        }
      ]
    },
    "SetPosition": {
      "memberof": "ApiParagraph",
      "name": "SetPosition",
      "description": "<p>Specifies an amount by which text is raised or lowered for this paragraph in relation to the default\nbaseline of the surrounding non-positioned text.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "hps",
          "name": "nPosition",
          "description": "<p>Specifies a positive (raised text) or negative (lowered text)\nmeasurement in half-points (1/144 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetSmallCaps": {
      "memberof": "ApiParagraph",
      "name": "SetSmallCaps",
      "description": "<p>Specifies that all the small letter characters in this paragraph are formatted for display only as their capital\nletter character equivalents which are two points smaller than the actual font size specified for this text.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isSmallCaps",
          "description": "<p>Specifies if the contents of the current paragraph are displayed capitalized two points smaller or not.</p>",
          "optional": false
        }
      ]
    },
    "SetSpacing": {
      "memberof": "ApiParagraph",
      "name": "SetSpacing",
      "description": "<p>Sets the text spacing measured in twentieths of a point.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "twips",
          "name": "nSpacing",
          "description": "<p>The value of the text spacing measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "SetStrikeout": {
      "memberof": "ApiParagraph",
      "name": "SetStrikeout",
      "description": "<p>Specifies that the contents of this paragraph are displayed with a single horizontal line through the center of the line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isStrikeout",
          "description": "<p>Specifies that the contents of the current paragraph are displayed struck through.</p>",
          "optional": false
        }
      ]
    },
    "SetUnderline": {
      "memberof": "ApiParagraph",
      "name": "SetUnderline",
      "description": "<p>Specifies that the contents of this paragraph are displayed along with a line appearing directly below the character\n(less than all the spacing above and below the characters on the line).</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "isUnderline",
          "description": "<p>Specifies that the contents of the current paragraph are displayed underlined.</p>",
          "optional": false
        }
      ]
    },
    "SetVertAlign": {
      "memberof": "ApiParagraph",
      "name": "SetVertAlign",
      "description": "<p>Specifies the alignment which will be applied to the contents of this paragraph in relation to the default appearance of the paragraph text:</p>\n<ul>\n<li><b>&quot;baseline&quot;</b> - the characters in the current paragraph will be aligned by the default text baseline.</li>\n<li><b>&quot;subscript&quot;</b> - the characters in the current paragraph will be aligned below the default text baseline.</li>\n<li><b>&quot;superscript&quot;</b> - the characters in the current paragraph will be aligned above the default text baseline.</li>\n</ul>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "\"baseline\" | \"subscript\" | \"superscript\"",
          "name": "sType",
          "description": "<p>The vertical alignment type applied to the text contents.</p>",
          "optional": false
        }
      ]
    },
    "Last": {
      "memberof": "ApiParagraph",
      "name": "Last",
      "description": "<p>Returns the last element of the paragraph which is not empty.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ParagraphContent"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetAllContentControls": {
      "memberof": "ApiParagraph",
      "name": "GetAllContentControls",
      "description": "<p>Returns a collection of content control objects in the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiInlineLvlSdt>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetAllDrawingObjects": {
      "memberof": "ApiParagraph",
      "name": "GetAllDrawingObjects",
      "description": "<p>Returns a collection of drawing objects in the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiDrawing>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetAllShapes": {
      "memberof": "ApiParagraph",
      "name": "GetAllShapes",
      "description": "<p>Returns a collection of shape objects in the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiShape>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetAllImages": {
      "memberof": "ApiParagraph",
      "name": "GetAllImages",
      "description": "<p>Returns a collection of image objects in the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiImage>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetAllCharts": {
      "memberof": "ApiParagraph",
      "name": "GetAllCharts",
      "description": "<p>Returns a collection of chart objects in the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiChart>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetAllOleObjects": {
      "memberof": "ApiParagraph",
      "name": "GetAllOleObjects",
      "description": "<p>Returns a collection of OLE objects in the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiOleObject>"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParentContentControl": {
      "memberof": "ApiParagraph",
      "name": "GetParentContentControl",
      "description": "<p>Returns a content control that contains the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiBlockLvlSdt",
          "null"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParentTable": {
      "memberof": "ApiParagraph",
      "name": "GetParentTable",
      "description": "<p>Returns a table that contains the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiTable",
          "null"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetParentTableCell": {
      "memberof": "ApiParagraph",
      "name": "GetParentTableCell",
      "description": "<p>Returns a table cell that contains the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiTableCell",
          "null"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "GetText": {
      "memberof": "ApiParagraph",
      "name": "GetText",
      "description": "<p>Returns the paragraph text.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "string"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "object",
          "name": "oPr",
          "description": "<p>The resulting string display properties.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "oPr.Numbering",
          "description": "<p>Defines if the resulting string will include numbering or not.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "boolean",
          "name": "oPr.Math",
          "description": "<p>Defines if the resulting string will include mathematical expressions or not.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "string",
          "name": "oPr.NewLineSeparator",
          "description": "<p>Defines how the line separator will be specified in the resulting string.</p>",
          "optional": true,
          "defaultValue": "'\\r'"
        },
        {
          "type": "string",
          "name": "oPr.TabSymbol",
          "description": "<p>Defines how the tab will be specified in the resulting string (does not apply to numbering).</p>",
          "optional": true,
          "defaultValue": "'\\t'"
        }
      ]
    },
    "GetTextPr": {
      "memberof": "ApiParagraph",
      "name": "GetTextPr",
      "description": "<p>Returns the paragraph text properties.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiTextPr"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetTextPr": {
      "memberof": "ApiParagraph",
      "name": "SetTextPr",
      "description": "<p>Sets the paragraph text properties.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiTextPr",
          "name": "oTextPr",
          "description": "<p>The paragraph text properties.</p>",
          "optional": false
        }
      ]
    },
    "InsertInContentControl": {
      "memberof": "ApiParagraph",
      "name": "InsertInContentControl",
      "description": "<p>Wraps the paragraph object with a rich text content control.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph",
          "ApiBlockLvlSdt"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "number",
          "name": "nType",
          "description": "<p>Defines if this method returns the ApiBlockLvlSdt (nType === 1) or ApiParagraph (any value except 1) object.</p>",
          "optional": false
        }
      ]
    },
    "InsertParagraph": {
      "memberof": "ApiParagraph",
      "name": "InsertParagraph",
      "description": "<p>Inserts a paragraph at the specified position.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiParagraph",
          "null"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string | ApiParagraph",
          "name": "paragraph",
          "description": "<p>Text or paragraph.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sPosition",
          "description": "<p>The position where the text or paragraph will be inserted (&quot;before&quot; or &quot;after&quot; the paragraph specified).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "beRNewPara",
          "description": "<p>Defines if this method returns a new paragraph (true) or the current paragraph (false).</p>",
          "optional": false
        }
      ]
    },
    "Select": {
      "memberof": "ApiParagraph",
      "name": "Select",
      "description": "<p>Selects the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "Search": {
      "memberof": "ApiParagraph",
      "name": "Search",
      "description": "<p>Searches for a scope of a paragraph object. The search results are a collection of ApiRange objects.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Array.<ApiRange>"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sText",
          "description": "<p>Search string.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isMatchCase",
          "description": "<p>Case sensitive or not.</p>",
          "optional": false
        }
      ]
    },
    "WrapInMailMergeField": {
      "memberof": "ApiParagraph",
      "name": "WrapInMailMergeField",
      "description": "<p>Wraps the paragraph content in a mail merge field.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": null
    },
    "AddNumberedCrossRef": {
      "memberof": "ApiParagraph",
      "name": "AddNumberedCrossRef",
      "description": "<p>Adds a numbered cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "numberedRefTo",
          "name": "sRefType",
          "description": "<p>The text or numeric value of a numbered reference you want to insert.</p>",
          "optional": false
        },
        {
          "type": "ApiParagraph",
          "name": "oParaTo",
          "description": "<p>The numbered paragraph to be referred to (must be in the document).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bLink",
          "description": "<p>Specifies if the reference will be inserted as a hyperlink.</p>",
          "optional": true,
          "defaultValue": true
        },
        {
          "type": "boolean",
          "name": "bAboveBelow",
          "description": "<p>Specifies if the above/below words indicating the position of the reference should be included (don't used with the &quot;text&quot; and &quot;aboveBelow&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "string",
          "name": "sSepWith",
          "description": "<p>A number separator (used only with the &quot;fullCtxParaNum&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": "\"\""
        }
      ]
    },
    "AddHeadingCrossRef": {
      "memberof": "ApiParagraph",
      "name": "AddHeadingCrossRef",
      "description": "<p>Adds a heading cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "headingRefTo",
          "name": "sRefType",
          "description": "<p>The text or numeric value of a heading reference you want to insert.</p>",
          "optional": false
        },
        {
          "type": "ApiParagraph",
          "name": "oParaTo",
          "description": "<p>The heading paragraph to be referred to (must be in the document).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bLink",
          "description": "<p>Specifies if the reference will be inserted as a hyperlink.</p>",
          "optional": true,
          "defaultValue": true
        },
        {
          "type": "boolean",
          "name": "bAboveBelow",
          "description": "<p>Specifies if the above/below words indicating the position of the reference should be included (don't used with the &quot;text&quot; and &quot;aboveBelow&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "AddBookmarkCrossRef": {
      "memberof": "ApiParagraph",
      "name": "AddBookmarkCrossRef",
      "description": "<p>Adds a bookmark cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "bookmarkRefTo",
          "name": "sRefType",
          "description": "<p>The text or numeric value of a bookmark reference you want to insert.</p>",
          "optional": false
        },
        {
          "type": "string",
          "name": "sBookmarkName",
          "description": "<p>The name of the bookmark to be referred to (must be in the document).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bLink",
          "description": "<p>Specifies if the reference will be inserted as a hyperlink.</p>",
          "optional": true,
          "defaultValue": true
        },
        {
          "type": "boolean",
          "name": "bAboveBelow",
          "description": "<p>Specifies if the above/below words indicating the position of the reference should be included (don't used with the &quot;text&quot; and &quot;aboveBelow&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "string",
          "name": "sSepWith",
          "description": "<p>A number separator (used only with the &quot;fullCtxParaNum&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": "\"\""
        }
      ]
    },
    "AddFootnoteCrossRef": {
      "memberof": "ApiParagraph",
      "name": "AddFootnoteCrossRef",
      "description": "<p>Adds a footnote cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "footnoteRefTo",
          "name": "sRefType",
          "description": "<p>The text or numeric value of a footnote reference you want to insert.</p>",
          "optional": false
        },
        {
          "type": "ApiParagraph",
          "name": "oParaTo",
          "description": "<p>The first paragraph from a footnote to be referred to (must be in the document).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bLink",
          "description": "<p>Specifies if the reference will be inserted as a hyperlink.</p>",
          "optional": true,
          "defaultValue": true
        },
        {
          "type": "boolean",
          "name": "bAboveBelow",
          "description": "<p>Specifies if the above/below words indicating the position of the reference should be included (don't used with the &quot;aboveBelow&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "AddEndnoteCrossRef": {
      "memberof": "ApiParagraph",
      "name": "AddEndnoteCrossRef",
      "description": "<p>Adds an endnote cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "endnoteRefTo",
          "name": "sRefType",
          "description": "<p>The text or numeric value of an endnote reference you want to insert.</p>",
          "optional": false
        },
        {
          "type": "ApiParagraph",
          "name": "oParaTo",
          "description": "<p>The first paragraph from an endnote to be referred to (must be in the document).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bLink",
          "description": "<p>Specifies if the reference will be inserted as a hyperlink.</p>",
          "optional": true,
          "defaultValue": true
        },
        {
          "type": "boolean",
          "name": "bAboveBelow",
          "description": "<p>Specifies if the above/below words indicating the position of the reference should be included (don't used with the &quot;aboveBelow&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "AddCaptionCrossRef": {
      "memberof": "ApiParagraph",
      "name": "AddCaptionCrossRef",
      "description": "<p>Adds a caption cross-reference to the current paragraph.\n<note>Please note that this paragraph must be in the document.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "CaptionLabel | string",
          "name": "sCaption",
          "description": "<p>The caption label (&quot;Equation&quot;, &quot;Figure&quot;, &quot;Table&quot;, or another caption label).</p>",
          "optional": false
        },
        {
          "type": "captionRefTo",
          "name": "sRefType",
          "description": "<p>The text or numeric value of a caption reference you want to insert.</p>",
          "optional": false
        },
        {
          "type": "ApiParagraph",
          "name": "oParaTo",
          "description": "<p>The caption paragraph to be referred to (must be in the document).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bLink",
          "description": "<p>Specifies if the reference will be inserted as a hyperlink.</p>",
          "optional": true,
          "defaultValue": true
        },
        {
          "type": "boolean",
          "name": "bAboveBelow",
          "description": "<p>Specifies if the above/below words indicating the position of the reference should be included (used only with the &quot;pageNum&quot; sRefType).</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "ToJSON": {
      "memberof": "ApiParagraph",
      "name": "ToJSON",
      "description": "<p>Converts the ApiParagraph object into the JSON object.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "JSON"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "boolean",
          "name": "bWriteNumberings",
          "description": "<p>Specifies if the used numberings will be written to the JSON object or not.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "bWriteStyles",
          "description": "<p>Specifies if the used styles will be written to the JSON object or not.</p>",
          "optional": false
        }
      ]
    },
    "GetPosInParent": {
      "memberof": "ApiParagraph",
      "name": "GetPosInParent",
      "description": "<p>Returns the paragraph position within its parent element.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "Number"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "ReplaceByElement": {
      "memberof": "ApiParagraph",
      "name": "ReplaceByElement",
      "description": "<p>Replaces the current paragraph with a new element.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "DocumentElement",
          "name": "oElement",
          "description": "<p>The element to replace the current paragraph with.</p>",
          "optional": false
        }
      ]
    },
    "AddCaption": {
      "memberof": "ApiParagraph",
      "name": "AddCaption",
      "description": "<p>Adds a caption paragraph after (or before) the current paragraph.\n<note>Please note that the current paragraph must be in the document (not in the footer/header).\nAnd if the current paragraph is placed in a shape, then a caption is added after (or before) the parent shape.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "string",
          "name": "sAdditional",
          "description": "<p>The additional text.</p>",
          "optional": false
        },
        {
          "type": "CaptionLabel | String",
          "name": "sLabel",
          "description": "<p>The caption label.</p>",
          "optional": true,
          "defaultValue": "\"Table\""
        },
        {
          "type": "boolean",
          "name": "bExludeLabel",
          "description": "<p>Specifies whether to exclude the label from the caption.</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "CaptionNumberingFormat",
          "name": "sNumberingFormat",
          "description": "<p>The possible caption numbering format.</p>",
          "optional": true,
          "defaultValue": "\"Arabic\""
        },
        {
          "type": "boolean",
          "name": "bBefore",
          "description": "<p>Specifies whether to insert the caption before the current paragraph (true) or after (false) (after/before the shape if it is placed in the shape).</p>",
          "optional": true,
          "defaultValue": false
        },
        {
          "type": "Number",
          "name": "nHeadingLvl",
          "description": "<p>The heading level (used if you want to specify the chapter number).\n<note>If you want to specify &quot;Heading 1&quot;, then nHeadingLvl === 0 and etc.</note></p>",
          "optional": true
        },
        {
          "type": "CaptionSep",
          "name": "sCaptionSep",
          "description": "<p>The caption separator (used if you want to specify the chapter number).</p>",
          "optional": true,
          "defaultValue": "\"hyphen\""
        }
      ]
    },
    "GetSection": {
      "memberof": "ApiParagraph",
      "name": "GetSection",
      "description": "<p>Returns the paragraph section.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiSection"
        ]
      ],
      "see": null,
      "inherits": null
    },
    "SetSection": {
      "memberof": "ApiParagraph",
      "name": "SetSection",
      "description": "<p>Sets the specified section to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "boolean"
        ]
      ],
      "see": null,
      "inherits": null,
      "params": [
        {
          "type": "ApiSection",
          "name": "oSection",
          "description": "<p>The section which will be set to the paragraph.</p>",
          "optional": false
        }
      ]
    },
    "SetStyle": {
      "memberof": "ApiParagraph",
      "name": "SetStyle",
      "description": "<p>The paragraph style base method.\n<note>This method is not used by itself, as it only forms the basis for the {@link ApiParagraph#SetStyle} method which sets the selected or created style for the paragraph.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetStyle}",
      "params": [
        {
          "type": "ApiStyle",
          "name": "oStyle",
          "description": "<p>The style of the paragraph to be set.</p>",
          "optional": false
        }
      ]
    },
    "GetStyle": {
      "memberof": "ApiParagraph",
      "name": "GetStyle",
      "description": "<p>Returns the paragraph style method.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiStyle"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetStyle}"
    },
    "SetContextualSpacing": {
      "memberof": "ApiParagraph",
      "name": "SetContextualSpacing",
      "description": "<p>Specifies that any space before or after this paragraph set using the\n{@link ApiParaPr#SetSpacingBefore} or {@link ApiParaPr#SetSpacingAfter} spacing element, should not be applied when the preceding and\nfollowing paragraphs are of the same paragraph style, affecting the top and bottom spacing respectively.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetContextualSpacing}",
      "params": [
        {
          "type": "boolean",
          "name": "isContextualSpacing",
          "description": "<p>The true value will enable the paragraph contextual spacing.</p>",
          "optional": false
        }
      ]
    },
    "SetIndLeft": {
      "memberof": "ApiParagraph",
      "name": "SetIndLeft",
      "description": "<p>Sets the paragraph left side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetIndLeft}",
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph left side indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "GetIndLeft": {
      "memberof": "ApiParagraph",
      "name": "GetIndLeft",
      "description": "<p>Returns the paragraph left side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetIndLeft}"
    },
    "SetIndRight": {
      "memberof": "ApiParagraph",
      "name": "SetIndRight",
      "description": "<p>Sets the paragraph right side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetIndRight}",
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph right side indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "GetIndRight": {
      "memberof": "ApiParagraph",
      "name": "GetIndRight",
      "description": "<p>Returns the paragraph right side indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetIndRight}"
    },
    "SetIndFirstLine": {
      "memberof": "ApiParagraph",
      "name": "SetIndFirstLine",
      "description": "<p>Sets the paragraph first line indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetIndFirstLine}",
      "params": [
        {
          "type": "twips",
          "name": "nValue",
          "description": "<p>The paragraph first line indentation value measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        }
      ]
    },
    "GetIndFirstLine": {
      "memberof": "ApiParagraph",
      "name": "GetIndFirstLine",
      "description": "<p>Returns the paragraph first line indentation.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetIndFirstLine}"
    },
    "SetJc": {
      "memberof": "ApiParagraph",
      "name": "SetJc",
      "description": "<p>Sets the paragraph contents justification.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetJc}",
      "params": [
        {
          "type": "\"left\" | \"right\" | \"both\" | \"center\"",
          "name": "sJc",
          "description": "<p>The justification type that\nwill be applied to the paragraph contents.</p>",
          "optional": false
        }
      ]
    },
    "GetJc": {
      "memberof": "ApiParagraph",
      "name": "GetJc",
      "description": "<p>Returns the paragraph contents justification.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"left\"",
          "\"right\"",
          "\"both\"",
          "\"center\"",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetJc}"
    },
    "SetKeepLines": {
      "memberof": "ApiParagraph",
      "name": "SetKeepLines",
      "description": "<p>Specifies that when rendering the document using a page view, all lines of the current paragraph are maintained on a single page whenever possible.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetKeepLines}",
      "params": [
        {
          "type": "boolean",
          "name": "isKeepLines",
          "description": "<p>The true value enables the option to keep lines of the paragraph on a single page.</p>",
          "optional": false
        }
      ]
    },
    "SetKeepNext": {
      "memberof": "ApiParagraph",
      "name": "SetKeepNext",
      "description": "<p>Specifies that when rendering the document using a paginated view, the contents of the current paragraph are at least\npartly rendered on the same page as the following paragraph whenever possible.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetKeepNext}",
      "params": [
        {
          "type": "boolean",
          "name": "isKeepNext",
          "description": "<p>The true value enables the option to keep lines of the paragraph on the same\npage as the following paragraph.</p>",
          "optional": false
        }
      ]
    },
    "SetPageBreakBefore": {
      "memberof": "ApiParagraph",
      "name": "SetPageBreakBefore",
      "description": "<p>Specifies that when rendering the document using a paginated view, the contents of the current paragraph are rendered at\nthe beginning of a new page in the document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetPageBreakBefore}",
      "params": [
        {
          "type": "boolean",
          "name": "isPageBreakBefore",
          "description": "<p>The true value enables the option to render the contents of the paragraph\nat the beginning of a new page in the document.</p>",
          "optional": false
        }
      ]
    },
    "SetSpacingLine": {
      "memberof": "ApiParagraph",
      "name": "SetSpacingLine",
      "description": "<p>Sets the paragraph line spacing. If the value of the sLineRule parameter is either\n&quot;atLeast&quot; or &quot;exact&quot;, then the value of nLine will be interpreted as twentieths of a point. If\nthe value of the sLineRule parameter is &quot;auto&quot;, then the value of the\nnLine parameter will be interpreted as 240ths of a line.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetSpacingLine}",
      "params": [
        {
          "type": "twips | line240",
          "name": "nLine",
          "description": "<p>The line spacing value measured either in twentieths of a point (1/1440 of an inch) or in 240ths of a line.</p>",
          "optional": false
        },
        {
          "type": "\"auto\" | \"atLeast\" | \"exact\"",
          "name": "sLineRule",
          "description": "<p>The rule that determines the measuring units of the line spacing.</p>",
          "optional": false
        }
      ]
    },
    "GetSpacingLineValue": {
      "memberof": "ApiParagraph",
      "name": "GetSpacingLineValue",
      "description": "<p>Returns the paragraph line spacing value.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips",
          "line240",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetSpacingLineValue}"
    },
    "GetSpacingLineRule": {
      "memberof": "ApiParagraph",
      "name": "GetSpacingLineRule",
      "description": "<p>Returns the paragraph line spacing rule.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "\"auto\"",
          "\"atLeast\"",
          "\"exact\"",
          "undefined"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetSpacingLineRule}"
    },
    "SetSpacingBefore": {
      "memberof": "ApiParagraph",
      "name": "SetSpacingBefore",
      "description": "<p>Sets the spacing before the current paragraph. If the value of the isBeforeAuto parameter is true, then\nany value of the nBefore is ignored. If isBeforeAuto parameter is not specified, then\nit will be interpreted as false.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetSpacingBefore}",
      "params": [
        {
          "type": "twips",
          "name": "nBefore",
          "description": "<p>The value of the spacing before the current paragraph measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isBeforeAuto",
          "description": "<p>The true value disables the spacing before the current paragraph.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetSpacingBefore": {
      "memberof": "ApiParagraph",
      "name": "GetSpacingBefore",
      "description": "<p>Returns the spacing before value of the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetSpacingBefore}"
    },
    "SetSpacingAfter": {
      "memberof": "ApiParagraph",
      "name": "SetSpacingAfter",
      "description": "<p>Sets the spacing after the current paragraph. If the value of the isAfterAuto parameter is true, then\nany value of the nAfter is ignored. If isAfterAuto parameter is not specified, then it\nwill be interpreted as false.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetSpacingAfter}",
      "params": [
        {
          "type": "twips",
          "name": "nAfter",
          "description": "<p>The value of the spacing after the current paragraph measured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAfterAuto",
          "description": "<p>The true value disables the spacing after the current paragraph.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetSpacingAfter": {
      "memberof": "ApiParagraph",
      "name": "GetSpacingAfter",
      "description": "<p>Returns the spacing after value of the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [
        [
          "twips"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetSpacingAfter}"
    },
    "SetShd": {
      "memberof": "ApiParagraph",
      "name": "SetShd",
      "description": "<p>Specifies the shading applied to the contents of the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetShd}",
      "params": [
        {
          "type": "ShdType",
          "name": "sType",
          "description": "<p>The shading type which will be applied to the contents of the current paragraph.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        },
        {
          "type": "boolean",
          "name": "isAuto",
          "description": "<p>The true value disables paragraph contents shading.</p>",
          "optional": true,
          "defaultValue": false
        }
      ]
    },
    "GetShd": {
      "memberof": "ApiParagraph",
      "name": "GetShd",
      "description": "<p>Returns the shading applied to the contents of the paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [
        [
          "ApiRGBColor"
        ]
      ],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#GetShd}"
    },
    "SetBottomBorder": {
      "memberof": "ApiParagraph",
      "name": "SetBottomBorder",
      "description": "<p>Specifies the border which will be displayed below a set of paragraphs which have the same paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added\nto the whole block rather than to every paragraph in this block.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetBottomBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current bottom border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset below the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetLeftBorder": {
      "memberof": "ApiParagraph",
      "name": "SetLeftBorder",
      "description": "<p>Specifies the border which will be displayed at the left side of the page around the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetLeftBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current left border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset to the left of the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetRightBorder": {
      "memberof": "ApiParagraph",
      "name": "SetRightBorder",
      "description": "<p>Specifies the border which will be displayed at the right side of the page around the specified paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetRightBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current right border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset to the right of the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetTopBorder": {
      "memberof": "ApiParagraph",
      "name": "SetTopBorder",
      "description": "<p>Specifies the border which will be displayed above a set of paragraphs which have the same set of paragraph border settings.\n<note>The paragraphs of the same style going one by one are considered as a single block, so the border is added to the whole block rather than to every paragraph in this block.</note></p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetTopBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current top border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset above the paragraph measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetBetweenBorder": {
      "memberof": "ApiParagraph",
      "name": "SetBetweenBorder",
      "description": "<p>Specifies the border which will be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetBetweenBorder}",
      "params": [
        {
          "type": "BorderType",
          "name": "sType",
          "description": "<p>The border style.</p>",
          "optional": false
        },
        {
          "type": "pt_8",
          "name": "nSize",
          "description": "<p>The width of the current border measured in eighths of a point.</p>",
          "optional": false
        },
        {
          "type": "pt",
          "name": "nSpace",
          "description": "<p>The spacing offset between the paragraphs measured in points used to place this border.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "r",
          "description": "<p>Red color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "g",
          "description": "<p>Green color component value.</p>",
          "optional": false
        },
        {
          "type": "byte",
          "name": "b",
          "description": "<p>Blue color component value.</p>",
          "optional": false
        }
      ]
    },
    "SetWidowControl": {
      "memberof": "ApiParagraph",
      "name": "SetWidowControl",
      "description": "<p>Specifies whether a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetWidowControl}",
      "params": [
        {
          "type": "boolean",
          "name": "isWidowControl",
          "description": "<p>The true value means that a single line of the current paragraph will be displayed on a separate page from the remaining content at display time by moving the line onto the following page.</p>",
          "optional": false
        }
      ]
    },
    "SetTabs": {
      "memberof": "ApiParagraph",
      "name": "SetTabs",
      "description": "<p>Specifies a sequence of custom tab stops which will be used for any tab characters in the current paragraph.\n<b>Warning</b>: The lengths of aPos array and aVal array <b>MUST BE</b> equal to each other.</p>",
      "tags": {
        "typeofeditors": [
          "CDE",
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetTabs}",
      "params": [
        {
          "type": "Array.<twips>",
          "name": "aPos",
          "description": "<p>An array of the positions of custom tab stops with respect to the current page margins\nmeasured in twentieths of a point (1/1440 of an inch).</p>",
          "optional": false
        },
        {
          "type": "Array.<TabJc>",
          "name": "aVal",
          "description": "<p>An array of the styles of custom tab stops, which determines the behavior of the tab\nstop and the alignment which will be applied to text entered at the current custom tab stop.</p>",
          "optional": false
        }
      ]
    },
    "SetNumPr": {
      "memberof": "ApiParagraph",
      "name": "SetNumPr",
      "description": "<p>Specifies that the current paragraph references a numbering definition instance in the current document.</p>",
      "tags": {
        "typeofeditors": [
          "CDE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetNumPr}",
      "params": [
        {
          "type": "ApiNumbering",
          "name": "oNumPr",
          "description": "<p>Specifies a numbering definition.</p>",
          "optional": false
        },
        {
          "type": "number",
          "name": "nLvl",
          "description": "<p>Specifies a numbering level reference. If the current instance of the ApiParaPr class is direct\nformatting of a paragraph, then this parameter MUST BE specified. Otherwise, if the current instance of the ApiParaPr class\nis the part of ApiStyle properties, this parameter will be ignored.</p>",
          "optional": true,
          "defaultValue": 0
        }
      ]
    },
    "SetBullet": {
      "memberof": "ApiParagraph",
      "name": "SetBullet",
      "description": "<p>Sets the bullet or numbering to the current paragraph.</p>",
      "tags": {
        "typeofeditors": [
          "CSE",
          "CPE"
        ]
      },
      "returns": [],
      "see": null,
      "inherits": "Inherited From: {@link ApiParaPr#SetBullet}",
      "params": [
        {
          "type": "ApiBullet",
          "name": "oBullet",
          "description": "<p>The bullet object created with the {@link Api#CreateBullet} or {@link Api#CreateNumbering} method.</p>",
          "optional": false
        }
      ]
    }
  },
  "events": {},
  "comment": "/**\n\t * Class representing a paragraph.\n\t * @constructor\n\t * @extends {ApiParaPr}\n\t */",
  "description": "<p>Class representing a paragraph.</p>",
  "scope": "global",
  "params": []
}